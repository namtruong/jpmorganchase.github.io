{
    "swagger" : "2.0",
    "info" : {
      "version" : "0.10.6-SNAPSHOT",
      "title" : "Tessera rest"
    },
    "host" : "localhost:8080",
    "basePath" : "/",
    "tags" : [
      {
        "name" : "Provides access to OpenAPI schema documentation."
      },
      {
        "name" : "Peer-to-peer APIs"
      },
      {
        "name" : "Third party APIs"
      }],
    "schemes" : [ "http", "https" ],
    "paths" : {
      "/api" : {
        "get" : {
          "tags" : [ "Provides access to OpenAPI schema documentation." ],
          "operationId" : "api",
          "produces" : [ "application/json", "text/html" ],
          "responses" : {
            "200" : {
              "description" : "Returns JSON or HTML OpenAPI document"
            }
          }
        }
      },
      "/partyinfo" : {
        "get" : {
          "tags" : ["Peer-to-peer APIs"],
          "summary" : "Fetch network/peer information",
          "description" : "",
          "operationId" : "getPartyInfo",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "Peer/Network information",
              "schema" : {
                "$ref" : "#/definitions/PartyInfo"
              }
            }
          }
        },
        "post" : {
          "tags" : ["Peer-to-peer APIs"],
          "summary" : "Request public key/url of other nodes",
          "description" : "",
          "operationId" : "partyInfo",
          "consumes" : [ "application/octet-stream" ],
          "produces" : [ "application/octet-stream" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Encoded PartyInfo Data"
            }
          }
        }
      },
      "/partyinfo/validate" : {
        "post" : {
          "tags" : ["Peer-to-peer APIs"],
          "summary" : "Validate the party that tries to send partyinfo",
          "operationId" : "validate",
          "consumes" : [ "application/octet-stream" ],
          "produces" : [ "text/plain" ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          }
        }
      },
      "/push" : {
        "post" : {
          "tags" : ["Peer-to-peer APIs"],
          "summary" : "Transmit encrypted payload between P2PRestApp Nodes",
          "description" : "",
          "operationId" : "push",
          "consumes" : [ "application/octet-stream" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "payload",
            "description" : "Key data to be stored.",
            "required" : true,
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string",
                "format" : "byte"
              }
            }
          } ],
          "responses" : {
            "201" : {
              "description" : "Key created status"
            },
            "500" : {
              "description" : "General error"
            }
          }
        }
      },
      "/resend" : {
        "post" : {
          "tags" : ["Peer-to-peer APIs"],
          "summary" : "Resend transactions for given key or message hash/recipient",
          "description" : "",
          "operationId" : "resend",
          "consumes" : [ "application/json" ],
          "produces" : [ "text/plain" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "resendRequest",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/ResendRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Encoded payload when TYPE is INDIVIDUAL"
            },
            "500" : {
              "description" : "General error"
            }
          }
        }
      },
      "/partyinfo/keys" : {
        "get" : {
          "tags" : ["Third party APIs"],
          "summary" : "Fetch network/peer public keys",
          "description" : "",
          "operationId" : "getPartyInfoKeys",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "Peer/Network public keys",
              "schema" : {
                "type" : "object",
                "properties" : {
                  "keys" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "key" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/keys" : {
        "get" : {
          "tags" : ["Third party APIs"],
          "summary" : "Fetch local public keys managed by the enclave",
          "description" : "",
          "operationId" : "getPublicKeys",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "Managed public keys",
              "schema" : {
                "type" : "object",
                "properties" : {
                  "keys" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "key" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/storeraw" : {
        "post" : {
          "tags" : ["Third party APIs"],
          "summary" : "Store raw private transaction payload",
          "description" : "",
          "operationId" : "store",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "storeRawRequest",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/StoreRawRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Store response",
              "schema" : {
                "$ref" : "#/definitions/StoreRawResponse"
              }
            },
            "400" : {
              "description" : "For unknown sender"
            }
          }
        }
      },
      "/delete" : {
        "post" : {
          "summary" : "Deprecated: Replaced by /transaction/{key} DELETE HTTP method",
          "description" : "",
          "operationId" : "delete",
          "consumes" : [ "application/json" ],
          "produces" : [ "text/plain" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "deleteRequest",
            "description" : "Key data to be deleted",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/DeleteRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Status message"
            },
            "404" : {
              "description" : "If the entity doesn't exist"
            }
          },
          "deprecated" : true
        }
      },
      "/receive" : {
        "get" : {
          "operationId" : "receive",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          }
        }
      },
      "/receiveraw" : {
        "get" : {
          "summary" : "Submit keys to retrieve payload and decrypt it",
          "description" : "",
          "operationId" : "receiveRaw",
          "consumes" : [ "application/octet-stream" ],
          "produces" : [ "application/octet-stream" ],
          "parameters" : [ {
            "name" : "c11n-key",
            "in" : "header",
            "description" : "Encoded transaction hash",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "c11n-to",
            "in" : "header",
            "description" : "Encoded Recipient Public Key",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "Raw payload"
            }
          }
        }
      },
      "/send" : {
        "post" : {
          "summary" : "Send private transaction payload",
          "description" : "",
          "operationId" : "send",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "sendRequest",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/SendRequest"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "Send response",
              "schema" : {
                "$ref" : "#/definitions/SendResponse"
              }
            },
            "400" : {
              "description" : "For unknown and unknown keys"
            }
          }
        }
      },
      "/sendraw" : {
        "post" : {
          "summary" : "Send private transaction payload",
          "description" : "",
          "operationId" : "sendRaw",
          "consumes" : [ "application/octet-stream" ],
          "produces" : [ "text/plain" ],
          "parameters" : [ {
            "name" : "c11n-from",
            "in" : "header",
            "required" : false,
            "type" : "string"
          }, {
            "name" : "c11n-to",
            "in" : "header",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "Encoded Key"
            },
            "500" : {
              "description" : "Unknown server error"
            }
          }
        }
      },
      "/sendsignedtx" : {
        "post" : {
          "summary" : "Send private raw transaction payload",
          "description" : "",
          "operationId" : "sendSignedTransaction",
          "consumes" : [ "application/octet-stream" ],
          "produces" : [ "text/plain" ],
          "parameters" : [ {
            "name" : "c11n-to",
            "in" : "header",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "Send response",
              "schema" : {
                "$ref" : "#/definitions/SendResponse"
              }
            },
            "400" : {
              "description" : "For unknown and unknown keys"
            }
          }
        }
      },
      "/transaction/{hash}" : {
        "get" : {
          "summary" : "Returns decrypted payload back to Quorum",
          "description" : "",
          "operationId" : "receive",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "hash",
            "in" : "path",
            "description" : "Encoded hash used to decrypt the payload",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "to",
            "in" : "query",
            "description" : "Encoded recipient key",
            "required" : false,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "Receive Response object",
              "schema" : {
                "$ref" : "#/definitions/ReceiveResponse"
              }
            }
          }
        }
      },
      "/transaction/{key}" : {
        "delete" : {
          "summary" : "Delete single transaction from P2PRestApp node",
          "description" : "",
          "operationId" : "deleteKey",
          "parameters" : [ {
            "name" : "key",
            "in" : "path",
            "description" : "Encoded hash",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "204" : {
              "description" : "Successful deletion"
            },
            "404" : {
              "description" : "If the entity doesn't exist"
            }
          }
        }
      },
      "/transaction/{key}/isSender" : {
        "get" : {
          "summary" : "Determine if local enclave is the sender of transaction",
          "description" : "",
          "operationId" : "isSender",
          "parameters" : [ {
            "name" : "key",
            "in" : "path",
            "description" : "Encoded hash",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          }
        }
      },
      "/transaction/{key}/participants" : {
        "get" : {
          "summary" : "Retrieve a list of participants for a transaction",
          "description" : "",
          "operationId" : "getParticipants",
          "parameters" : [ {
            "name" : "key",
            "in" : "path",
            "description" : "Encoded hash",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "default" : {
              "description" : "successful operation"
            }
          }
        }
      },
      "/upcheck" : {
        "get" : {
          "summary" : "Check if local P2PRestApp Node is up",
          "description" : "",
          "operationId" : "upCheck",
          "produces" : [ "text/plain" ],
          "responses" : {
            "200" : {
              "description" : "I'm up!",
              "schema" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "/version" : {
        "get" : {
          "summary" : "Request current version of P2PRestApp",
          "description" : "",
          "operationId" : "getVersion",
          "produces" : [ "text/plain" ],
          "responses" : {
            "200" : {
              "description" : "Current application version ",
              "schema" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "definitions" : {
      "Party" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "lastContacted" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PartyInfo" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "recipients" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/Recipient"
            }
          },
          "parties" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/definitions/Party"
            }
          }
        }
      },
      "PublicKey" : {
        "type" : "object",
        "properties" : {
          "keyBytes" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          }
        }
      },
      "Recipient" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "$ref" : "#/definitions/PublicKey"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "ResendRequest" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "Resend type INDIVIDUAL or ALL, to resend a single or all transactions",
            "enum" : [ "ALL", "INDIVIDUAL" ]
          },
          "publicKey" : {
            "type" : "string",
            "description" : "The recipient public key to resend transactions for"
          },
          "key" : {
            "type" : "string",
            "description" : "Base64 encoded transaction hash"
          }
        }
      },
      "DeleteRequest" : {
        "type" : "object",
        "required" : [ "Encoded transaction hash" ],
        "properties" : {
          "Encoded transaction hash" : {
            "type" : "string",
            "minLength" : 1,
            "maxLength" : 2147483647
          }
        }
      },
      "ReceiveResponse" : {
        "type" : "object",
        "properties" : {
          "payload" : {
            "type" : "array",
            "description" : "Encode response servicing receive requests",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          }
        }
      },
      "SendRequest" : {
        "type" : "object",
        "required" : [ "payload" ],
        "properties" : {
          "payload" : {
            "type" : "array",
            "description" : "Encrypted payload to send to other parties.",
            "items" : {
              "type" : "string",
              "format" : "byte"
            },
            "maxItems" : 2147483647,
            "minItems" : 1
          },
          "from" : {
            "type" : "string",
            "description" : "Sender public key"
          },
          "to" : {
            "type" : "array",
            "description" : "Recipient public keys",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "SendResponse" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "string",
            "description" : "Base64 encoded transaction hash"
          }
        }
      },
      "StoreRawRequest" : {
        "type" : "object",
        "required" : [ "payload" ],
        "properties" : {
          "payload" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            },
            "maxItems" : 2147483647,
            "minItems" : 1
          },
          "from" : {
            "type" : "array",
            "description" : "Sender public key",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          }
        }
      },
      "StoreRawResponse" : {
        "type" : "object",
        "properties" : {
          "key" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          }
        }
      }
    }
  }
